name: Build and Deploy Docker App to Azure Web App

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: mytrackstackregistry
  IMAGE_NAME: mytrackstack-api
  AZURE_WEBAPP_NAME: mytrackstack-api
  RESOURCE_GROUP: MyTrackStackRG
  DOCKER_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Docker Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: dummy  # Required but ignored with OIDC, safe placeholder

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }} .

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}

      - name: Deploy to Azure Web App (Container)
        run: |
          az webapp config container set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }} \
            --docker-registry-server-url https://${{ env.ACR_NAME }}.azurecr.io

      - name: Restart Web App (optional)
        run: |
          az webapp restart \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }}
